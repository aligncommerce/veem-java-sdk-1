group = 'com.veem'
version = '1.0'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    extraLibs
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8',
            'com.googlecode.json-simple:json-simple:1.1.1',
            'com.squareup.retrofit2:retrofit:2.2.0',
            'com.squareup.retrofit2:converter-jackson:2.2.0',
            'com.squareup.okhttp3:logging-interceptor:3.12.0',
            'com.neovisionaries:nv-i18n:1.21',
            'org.projectlombok:lombok:1.18.4',
            'org.slf4j:slf4j-api:1.7.25'
    testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'
}

task copyExtraLibs(type: Copy) {
    from configurations.extraLibs
    into tasks.jar.destinationDir
}
task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadocs) {
   classifier "javadoc"
    from javadoc.destinationDir
}

artifcats {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF', 'org/junit/**', 'junit'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'com.veem'
            artifactId 'veem-sdk'
            version '1.0.0'

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            artifact(sourceJar) {
                classifier = 'sources'
            }

            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username <sonatypeUsername>
                password <sonatypePassword>
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Veem SDK'
            name 'veem.com Java'
            url 'https://github.com/veeminc/veem-java-sdk'
            organization {
                name 'com.veem'
                url 'https://github.com/veeminc'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/veeminc/veem-java-sdk/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://github.com/veeminc/veem-java-sdk/issues/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/veeminc/veem-java-sdk/issues'
                connection 'scm:git:git://github.com/veeminc/veem-java-sdk.git'
                developerConnection 'scm:git:ssh://git@github.com/veeminc/veem-java-sdk.git'
            }
            developers {
                developer {
                    name 'Veem'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}


